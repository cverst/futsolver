from ortools.sat.python import cp_model


class VarArraySolutionPrinter(cp_model.CpSolverSolutionCallback):
    """Print intermediate solutions."""

    def __init__(self, variables):
        cp_model.CpSolverSolutionCallback.__init__(self)
        self.__variables = variables
        self.__solution_count = 0

    def on_solution_callback(self):
        self.__solution_count += 1
        for v in self.__variables:
            print('%s=%i' % (v, self.Value(v)), end=' ')
        print()

    def solution_count(self):
        return self.__solution_count


def SearchForAllSolutionsSampleSat(team_rating):
    """Showcases calling the solver to search for all solutions."""
    # Creates the model.
    model = cp_model.CpModel()

    # Creates the variables.
    TEAM_SIZE = 11
    MIN_RATING = 60
    MAX_RATING = 99
    ratings = {}
    ratings_selected = {}
    for r in range(MIN_RATING, MAX_RATING + 1):
        ratings[r] = model.NewIntVar(0, TEAM_SIZE, "rating_{}".format(r))
        ratings_selected[r] = model.NewBoolVar("selected_{}".format(r))

    # Create the constraints.
    # Sum of ratings must be equal TEAM_SIZE
    model.Add(sum(ratings.values()) == TEAM_SIZE)

    # Each rating must be higher than the average rating in order to be selected
    for r, var in ratings.items():
        model.Add(var >= 1).OnlyEnforceIf(ratings_selected[r])
        model.Add(var == 0).OnlyEnforceIf(ratings_selected[r].Not())

    # Sum of rating * number of players with that rating must be equal to team_rating * TEAM_SIZE
    model.Add(
        sum([r * ratings[r] for r in range(MIN_RATING, MAX_RATING + 1)])
        == team_rating * TEAM_SIZE
    )

    # Create a solver and solve.
    solver = cp_model.CpSolver()
    solution_printer = VarArraySolutionPrinter(ratings.values())
    # Enumerate all solutions.
    solver.parameters.enumerate_all_solutions = True
    # Solve.
    status = solver.Solve(model, solution_printer)

    print('Status = %s' % solver.StatusName(status))
    print('Number of solutions found: %i' % solution_printer.solution_count())


SearchForAllSolutionsSampleSat(98)

    # num_players = 11
    # n1 = model.NewIntVar(0, num_players, "n1")
    # n2 = model.NewIntVar(0, num_players, "n2")
    # n3 = model.NewIntVar(0, num_players, "n3")
    # n4 = model.NewIntVar(0, num_players, "n4")
    # n5 = model.NewIntVar(0, num_players, "n5")
    # n6 = model.NewIntVar(0, num_players, "n6")
    # n7 = model.NewIntVar(0, num_players, "n7")
    # n8 = model.NewIntVar(0, num_players, "n8")
    # n9 = model.NewIntVar(0, num_players, "n9")
    # n10 = model.NewIntVar(0, num_players, "n10")
    # n11 = model.NewIntVar(0, num_players, "n11")
    # n12 = model.NewIntVar(0, num_players, "n12")
    # n13 = model.NewIntVar(0, num_players, "n13")
    # n14 = model.NewIntVar(0, num_players, "n14")
    # n15 = model.NewIntVar(0, num_players, "n15")
    # n16 = model.NewIntVar(0, num_players, "n16")
    # n17 = model.NewIntVar(0, num_players, "n17")
    # n18 = model.NewIntVar(0, num_players, "n18")
    # n19 = model.NewIntVar(0, num_players, "n19")
    # n20 = model.NewIntVar(0, num_players, "n20")
    # n21 = model.NewIntVar(0, num_players, "n21")
    # n22 = model.NewIntVar(0, num_players, "n22")
    # n23 = model.NewIntVar(0, num_players, "n23")
    # n24 = model.NewIntVar(0, num_players, "n24")
    # n25 = model.NewIntVar(0, num_players, "n25")
    # n26 = model.NewIntVar(0, num_players, "n26")
    # n27 = model.NewIntVar(0, num_players, "n27")
    # n28 = model.NewIntVar(0, num_players, "n28")
    # n29 = model.NewIntVar(0, num_players, "n29")
    # n30 = model.NewIntVar(0, num_players, "n30")
    # n31 = model.NewIntVar(0, num_players, "n31")
    # n32 = model.NewIntVar(0, num_players, "n32")
    # n33 = model.NewIntVar(0, num_players, "n33")
    # n34 = model.NewIntVar(0, num_players, "n34")
    # n35 = model.NewIntVar(0, num_players, "n35")
    # n36 = model.NewIntVar(0, num_players, "n36")
    # n37 = model.NewIntVar(0, num_players, "n37")
    # n38 = model.NewIntVar(0, num_players, "n38")
    # n39 = model.NewIntVar(0, num_players, "n39")
    # n40 = model.NewIntVar(0, num_players, "n40")
#    model.Add(
#         (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99)
#         + n1 * min([60 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n2 * min([61 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n3 * min([62 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n4 * min([63 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n5 * min([64 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n6 * min([65 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n7 * min([66 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n8 * min([67 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n9 * min([68 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n10 * min([69 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n11 * min([70 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n12 * min([71 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n13 * min([72 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n14 * min([73 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n15 * min([74 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n16 * min([75 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n17 * min([76 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n18 * min([77 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n19 * min([78 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n20 * min([79 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n21 * min([80 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n22 * min([81 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n23 * min([82 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n24 * min([83 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n25 * min([84 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n26 * min([85 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n27 * min([86 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n28 * min([87 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n29 * min([88 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n30 * min([89 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n31 * min([90 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n32 * min([91 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n33 * min([92 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n34 * min([93 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n35 * min([94 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n36 * min([95 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n37 * min([96 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n38 * min([97 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n39 * min([98 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
        # + n40 * min([99 * num_players - (n1 * 60 + n2 * 61 + n3 * 62 + n4 * 63 + n5 * 64 + n6 * 65 + n7 * 66 + n8 * 67 + n9 * 68 + n10 * 69 + n11 * 70 + n12 * 71 + n13 * 72 + n14 * 73 + n15 * 74 + n16 * 75 + n17 * 76 + n18 * 77 + n19 * 78 + n20 * 79 + n21 * 80 + n22 * 81 + n23 * 82 + n24 * 83 + n25 * 84 + n26 * 85 + n27 * 86 + n28 * 87 + n29 * 88 + n30 * 89 + n31 * 90 + n32 * 91 + n33 * 92 + n34 * 93 + n35 * 94 + n36 * 95 + n37 * 96 + n38 * 97 + n39 * 98 + n40 * 99), 0])
    #     == team_rating * num_players
    # )
        # model.Add(n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + n10 + n11 + n12 + n13 + n14 + n15 + n16 + n17 + n18 + n19 + n20 + n21 + n22 + n23 + n24 + n25 + n26 + n27 + n28 + n29 + n30 + n31 + n32 + n33 + n34 + n35 + n36 + n37 + n38 + n39 + n40 == num_players)
